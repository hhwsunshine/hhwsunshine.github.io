<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>抖音是如何&#39;绑架&#39;我们的</title>
    <link href="/2020/02/13/%E6%8A%96%E9%9F%B3%E6%98%AF%E5%A6%82%E4%BD%95-%E7%BB%91%E6%9E%B6-%E6%88%91%E4%BB%AC%E7%9A%84/"/>
    <url>/2020/02/13/%E6%8A%96%E9%9F%B3%E6%98%AF%E5%A6%82%E4%BD%95-%E7%BB%91%E6%9E%B6-%E6%88%91%E4%BB%AC%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<p>原文链接： <a href="http://dy.163.com/v2/article/detail/DHEL7NKB0518U04N.html" target="_blank" rel="noopener">http://dy.163.com/v2/article/detail/DHEL7NKB0518U04N.html</a></p><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>这篇文中，抖音只是一个具象化代表，</p><p>​ 我想讲的是以抖音为代表的一众以算法为内核的娱乐化APP。</p><p>　　每个时代都会有一些淘汰机制，</p><p>　　而现在的时代，</p><p>　　会根据自制力和信息筛选能力对人进行淘汰。</p><p>　　但总有一些人是不愿惊醒的，</p><p>　　等他们发现自己一事无成时，</p><p>　　会选择抱怨别人、抱怨社会、然后把希望寄托给下一代，</p><p>　　在这群人眼里错的不是他们，</p><p>　　而是社会。</p><p>　　希望这个人不会是你。</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>前几天抖音出了一个“爆视频”，单单评论数就超过一百万，播放数量过千万。</p><p>　　这几乎是我们这些文字工作者难以企及的数量。而数量背后，潜藏着一个个为此付出时间与精力的人。<br><img src="/img/content/douyin/1.png" srcset="/img/loading.gif" alt=""></p><p>除此之外，相信你在朋友圈也看到过不少这样的话：</p><p>　　“中了抖音的毒”、“刷抖音根本停不下来啊啊啊，一看表竟然刷了三个多小时……”</p><p><img src="/img/content/douyin/2.png" srcset="/img/loading.gif" alt=""></p><p>这一点相信刷过抖音、亦或者是刷过快手、火山小视频等等各种小视频软件的人都会深有感受。</p><p>　　如果你在路边、休息处看到一个人手指连动笑的合不拢嘴，那大概就是在刷小视频了。</p><p>　　我们会不自觉的深陷其中，蓦然之间发现时间已经过去了几个小时。</p><p>　　尼尔·波兹曼在《娱乐至死》里这样写过这样的一段话：</p><blockquote><p>“一切公众话语日渐以娱乐的方式出现，并成为一种文化精神。我们的政治、宗教、新闻、体育、教育和商业都心甘情愿地成为娱乐的附庸，毫无怨言，甚至无声无息，其结果是我们成了一个娱乐至死的物种。”</p></blockquote><p>层次越低的人，越喜欢花时间在娱乐上。</p><p>　　越来越多的人患上了网络依存症，对各类娱乐新闻上瘾、产生依赖，人云亦云，附和跟风，沉溺在虚拟的世界中不能自拔。</p><p>　　我害怕长久以往，自己会变成一个透明的躯壳，脑袋空空、沉浸于感官娱乐。</p><p>　　有人说，你的时间花在哪，你就会成为什么样的人。格局高的人，不会花太多时间在娱乐上。</p><p>　　深以为然。</p><p>　　我们正在爱上这些使我们丧失思考能力的工业技术。</p><p>　　抖音、快手、抖音、微博这些软件正在飞速地强化我们对新奇事物的需求度，并拉高我们的敏感度。</p><p>　　同时降低的就是对文字的需求度与耐心度。</p><p>　　刷多了抖音、快手、微博这些软件之后，我们就会形成一种惯性：没有耐心去读一本长文或者书籍。更没有时间去思考，因为我们总是在期待着下一个引爆眼球的新奇事物，等待着它在视频中直接了当的呈现。</p><p>　　比如你就有可能看不完我的这篇长文。</p><p>　　而在被轰炸多了之后，我们就会逐渐爱上这种“被喂食”的感觉。</p><p>　　而当“被喂食”形成一种习惯之后，我们的就会惰于思考，耐心以及深挖问题的能力就会被逐渐抹杀。</p><p>　　还记得盛大公司吗？</p><p><img src="/img/content/douyin/3.png" srcset="/img/loading.gif" alt="陈天桥"></p><p>　　这是一家十分“传奇”的公司，2001年年底，盛大账面上只剩下大约30万美金，陈天桥倾囊而出，买下韩国一款二线游戏《传奇》的中国代理权。</p><p>　　2002年，《传奇》同时在线人数突破60万，成为当时世界上最大规模的网络游戏，盛大月均销售额超过千万，市场占有率超过六成。</p><p>　　但是陈天桥在接受记者采访时却不止一次说过：“我从来不玩《传奇》，因为这是个烂游戏，浪费我的时间，但是盛大是个好公司”</p><p>　　但是不可否认的是，这个备受追捧的烂游戏确实吸来了千万销售额。</p><p>　　<strong>看到了么？你每时每刻傻呵呵的沉浸其中，换来的都是经营者的盆满钵满。</strong></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>“不知道为什么，刷抖音的时候感觉那么开心，可是刷完之后却分外空虚，变得很丧，而且更自卑了”一个粉丝在凌晨一点多私信我。</p><p>　　他说他刚在床上刷完抖音，然后就失眠了。</p><p>　　在孤寂无人的夜晚，我们最容易感受到自己的无助与空虚。</p><p>　　我回复说：“因为你爱上了一个虚拟且充满新奇G点世界，但是你依旧碌碌无为，你的生活仍然平平无奇。”</p><p>　　我称抖音、火山小视频、今日头条、快手等等以算法推荐为内核的软件为：毒品软件。</p><p>　　一款类似抖音的 APP，背后都是一个强大的运营团队，有着专业的消费者行为学作支撑，用尽最前沿的科技，最详尽的数据，通过声、光、交互、反馈等全方位途径，在各种心理学、行为经济学、认知神经科学等理论指导下，精心打造 —— 目的是什么？为了创造一个虚拟空间，来消磨你的时间。</p><p>　　它带来的满足感太容易获得，而一旦你习惯了这种“唾手可得”的满足感，就不愿再去做那些“高投入”的事情了。比如在高度自律的状态下完成作业、思考问题。</p><p>　　在这个被娱乐塞满的世界里，当没有足够强大的自控力时，我们就会因为沉迷各种诱惑而“被碌碌无为”。</p><p>　　比尔盖茨曾在采访中说过，他认为13岁是孩子拥有第一部手机的合适年龄。</p><p><img src="/img/content/douyin/4.png" srcset="/img/loading.gif" alt="比尔盖茨和女儿"></p><p>　　他、珍妮弗、以及1999年出生的儿子罗里·盖茨都是在过了13岁生日后才被允许使用手机，小女儿菲比则在期待着13岁生日时得到自己的第一部手机。</p><p>　　“我们家把13岁定为得到手机的年限。”盖茨说，鉴于这项规定，孩子们从学校回家后常向他抱怨说，“其他孩子都有手机，我是唯一一个没有手机的人，这令人尴尬”。</p><p>　　<strong>你知道吗？乔布斯是不允许自己的孩子们用iPad的。</strong></p><p><img src="/img/content/douyin/5.png" srcset="/img/loading.gif" alt=""></p><p>乔布斯生前有三个年幼的孩子。有一天纽约时报的记者Nick Bilto问他：</p><p>　　</p><blockquote><p>“你的孩子们一定很喜欢iPad吧？”</p></blockquote><p>老乔回答：</p><p>　　</p><blockquote><p>“他们没有用过。我们限制孩子们在家里使用智能产品。”</p></blockquote><p>　　听起来是不是怪怪的？iPad之父居然不允许自己的孩子用iPad?感觉就像是毒贩不允许自己的孩子吸毒一样….</p><p>　　无独有偶。<strong>在硅谷，很多高科技公司的高层和工程师里面，开始流行不让自己的孩子接触智能科技产品。</strong></p><p>　　他们甚至把孩子们送到传统的，完全没有智能和科技产品的Waldorf学校，在这个学校的校园里根本就找不到电脑！</p><p>　　我们看到的是电子产品正在飞速低龄化，抖音快手已经迅速占据了小学生的生活。</p><p><img src="/img/content/douyin/6.png" srcset="/img/loading.gif" alt=""></p><p>而因为缺乏自制力，他们会沉浸其中无法自拔，在最应当拼搏的年纪里选择安逸，在价值观形成之际被灌输进大量的光怪陆离与不正之风。</p><p>　　于是他们开始模仿，追逐着未成年怀孕风当宝妈、跟着小青年跳社会摇、以为低胸博眼球就能赚大钱……当管制不利时，堕落便自此开始。</p><p>　　那些我们所热爱的东西，正在一步步把我们连根拔起。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>在作家周冲的文章中看到过这样一段话：</p><blockquote><p>当你的时间不再用于深度学习，当你的注意力被他人瓜分，当你只看综艺与电视剧，当你在群体中呆的时间越来越长，当你执行力越来越差，当你评价他人的次数越来越多，当你抱怨越来越频繁，当你回想往事的频率越来越高……毁灭就已经发生了。</p></blockquote><p>　　如何分配你的时间，取决于你。</p><p>　　罗振宇说，未来，在时间这个战场上，有两门生意会特别值钱。</p><p>　　第一，就是帮别人省时间。第二，就是帮别人把省下来的时间浪费在那些美好的事物上。</p><p>　　能够掌控时间的人，才能掌控自己的一生。</p><p>　　这座城市，一半人在拼命，一半人在认命；一半人在抢时间，一半人在耗时间；一半人在燃烧青春，一半人在虚度青春。</p><p>　　你愿意做哪一半的人？</p>]]></content>
    
    
    
    <tags>
      
      <tag>推文</tag>
      
      <tag>life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析入门</title>
    <link href="/2020/02/13/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%85%A5%E9%97%A8/"/>
    <url>/2020/02/13/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Matplotlib介绍与使用</title>
    <link href="/2020/02/13/Matplotlib%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/02/13/Matplotlib%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Numpy使用</title>
    <link href="/2020/02/13/Numpy%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/02/13/Numpy%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>panda和Dataframe使用</title>
    <link href="/2020/02/13/panda%E5%92%8CDataframe%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/02/13/panda%E5%92%8CDataframe%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>influxdb概述与使用</title>
    <link href="/2020/02/13/influxdb%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/02/13/influxdb%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>物联网数据传输与存储:EMQ telegraf influxdb介绍</title>
    <link href="/2020/02/13/%E7%89%A9%E8%81%94%E7%BD%91%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E4%B8%8E%E5%AD%98%E5%82%A8-EMQ-telegraf-influxdb%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/02/13/%E7%89%A9%E8%81%94%E7%BD%91%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E4%B8%8E%E5%AD%98%E5%82%A8-EMQ-telegraf-influxdb%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<hr>]]></content>
    
    
    
    <tags>
      
      <tag>mqtt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>物联网传输协议：mqtt入门</title>
    <link href="/2020/02/13/mqtt%E6%A6%82%E8%BF%B0%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/02/13/mqtt%E6%A6%82%E8%BF%B0%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="一、简述"><a href="#一、简述" class="headerlink" title="一、简述"></a>一、简述</h1><p> MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的“轻量级”通讯协议，该协议构建于TCP/IP协议上，由IBM在1999年发布。MQTT最大优点在于，可以以极少的代码和有限的带宽，为连接远程设备提供实时可靠的消息服务。作为一种低开销、低带宽占用的即时通讯协议，使其在物联网、小型设备、移动应用等方面有较广泛的应用。</p><p> MQTT是一个基于客户端-服务器的消息发布/订阅传输协议。MQTT协议是轻量、简单、开放和易于实现的，这些特点使它适用范围非常广泛。在很多情况下，包括受限的环境中，如：机器与机器（M2M）通信和物联网（IoT）。其在，通过卫星链路通信传感器、偶尔拨号的医疗设备、智能家居、及一些小型化设备中已广泛使用。<br><img src="/img/content/mqtt/1.png" srcset="/img/loading.gif" alt=""></p><h1 id="二、设计规范"><a href="#二、设计规范" class="headerlink" title="二、设计规范"></a>二、设计规范</h1><p>由于物联网的环境是非常特别的，所以MQTT遵循以下设计原则：</p><p>（1）精简，不添加可有可无的功能；</p><p>（2）发布/订阅（Pub/Sub）模式，方便消息在传感器之间传递；</p><p>（3）允许用户动态创建主题，零运维成本；</p><p>（4）把传输量降到最低以提高传输效率；</p><p>（5）把低带宽、高延迟、不稳定的网络等因素考虑在内；</p><p>（6）支持连续的会话控制；</p><p>（7）理解客户端计算能力可能很低；</p><p>（8）提供服务质量管理；</p><p>（9）假设数据不可知，不强求传输数据的类型与格式，保持灵活性。</p><h1 id="三、主要特性"><a href="#三、主要特性" class="headerlink" title="三、主要特性"></a>三、主要特性</h1><p> MQTT协议工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：</p><p>（1）使用发布/订阅消息模式，提供一对多的消息发布，解除应用程序耦合。</p><p> 这一点很类似于XMPP，但是MQTT的信息冗余远小于XMPP，,因为XMPP使用XML格式文本来传递数据。</p><p>（2）对负载内容屏蔽的消息传输。</p><p>（3）使用TCP/IP提供网络连接。</p><p> 主流的MQTT是基于TCP连接进行数据推送的，但是同样有基于UDP的版本，叫做MQTT-SN。这两种版本由于基于不同的连接方式，优缺点自然也就各有不同了。</p><p>（4）有三种消息发布服务质量：</p><p> “至多一次”，消息发布完全依赖底层TCP/IP网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。这一种方式主要普通APP的推送，倘若你的智能设备在消息推送时未联网，推送过去没收到，再次联网也就收不到了。</p><p> “至少一次”，确保消息到达，但消息重复可能会发生。</p><p> “只有一次”，确保消息到达一次。在一些要求比较严格的计费系统中，可以使用此级别。在计费系统中，消息重复或丢失会导致不正确的结果。这种最高质量的消息发布服务还可以用于即时通讯类的APP的推送，确保用户收到且只会收到一次。</p><p>（5）小型传输，开销很小（固定长度的头部是2字节），协议交换最小化，以降低网络流量。</p><p> 这就是为什么在介绍里说它非常适合“在物联网领域，传感器与服务器的通信，信息的收集”，要知道嵌入式设备的运算能力和带宽都相对薄弱，使用这种协议来传递消息再适合不过了。</p><p>（6）使用Last Will和Testament特性通知有关各方客户端异常中断的机制。</p><p>Last Will：即遗言机制，用于通知同一主题下的其他设备发送遗言的设备已经断开了连接。</p><p>Testament：遗嘱机制，功能类似于Last Will。</p><h1 id="四、MQTT协议原理"><a href="#四、MQTT协议原理" class="headerlink" title="四、MQTT协议原理"></a>四、MQTT协议原理</h1><h2 id="4-1-MQTT协议实现方式"><a href="#4-1-MQTT协议实现方式" class="headerlink" title="4.1 MQTT协议实现方式"></a>4.1 MQTT协议实现方式</h2><p> 实现MQTT协议需要客户端和服务器端通讯完成，在通讯过程中，MQTT协议中有三种身份：发布者（Publish）、代理（Broker）（服务器）、订阅者（Subscribe）。其中，消息的发布者和订阅者都是客户端，消息代理是服务器，消息发布者可以同时是订阅者。</p><p>MQTT传输的消息分为：主题（Topic）和负载（payload）两部分：</p><p>（1）Topic，可以理解为消息的类型，订阅者订阅（Subscribe）后，就会收到该主题的消息内容（payload）；</p><p>（2）payload，可以理解为消息的内容，是指订阅者具体要使用的内容。</p><h2 id="4-2-网络传输与应用消息"><a href="#4-2-网络传输与应用消息" class="headerlink" title="4.2 网络传输与应用消息"></a>4.2 网络传输与应用消息</h2><p> MQTT会构建底层网络传输：它将建立客户端到服务器的连接，提供两者之间的一个有序的、无损的、基于字节流的双向传输。</p><p>当应用数据通过MQTT网络发送时，MQTT会把与之相关的服务质量（QoS）和主题名（Topic）相关连。</p><h2 id="4-3MQTT客户端"><a href="#4-3MQTT客户端" class="headerlink" title="4.3MQTT客户端"></a>4.3MQTT客户端</h2><p> 一个使用MQTT协议的应用程序或者设备，它总是建立到服务器的网络连接。客户端可以：</p><p>（1）发布其他客户端可能会订阅的信息；</p><p>（2）订阅其它客户端发布的消息；</p><p>（3）退订或删除应用程序的消息；</p><p>（4）断开与服务器连接。</p><h2 id="4-4-MQTT服务器"><a href="#4-4-MQTT服务器" class="headerlink" title="4.4 MQTT服务器"></a>4.4 MQTT服务器</h2><p> MQTT服务器以称为“消息代理”（Broker），可以是一个应用程序或一台设备。它是位于消息发布者和订阅者之间，它可以：</p><p>（1）接受来自客户的网络连接；</p><p>（2）接受客户发布的应用信息；</p><p>（3）处理来自客户端的订阅和退订请求；</p><p>（4）向订阅的客户转发应用程序消息。</p><h2 id="4-5-MQTT协议中的订阅、主题、会话"><a href="#4-5-MQTT协议中的订阅、主题、会话" class="headerlink" title="4.5 MQTT协议中的订阅、主题、会话"></a>4.5 MQTT协议中的订阅、主题、会话</h2><p>一、订阅（Subscription）</p><p> 订阅包含主题筛选器（Topic Filter）和最大服务质量（QoS）。订阅会与一个会话（Session）关联。一个会话可以包含多个订阅。每一个会话中的每个订阅都有一个不同的主题筛选器。</p><p>二、会话（Session）</p><p> 每个客户端与服务器建立连接后就是一个会话，客户端和服务器之间有状态交互。会话存在于一个网络之间，也可能在客户端和服务器之间跨越多个连续的网络连接。</p><p>三、主题名（Topic Name）</p><p> 连接到一个应用程序消息的标签，该标签与服务器的订阅相匹配。服务器会将消息发送给订阅所匹配标签的每个客户端。</p><p>四、主题筛选器（Topic Filter）</p><p> 一个对主题名通配符筛选器，在订阅表达式中使用，表示订阅所匹配到的多个主题。</p><p>五、负载（Payload）</p><p> 消息订阅者所具体接收的内容。</p><h2 id="4-6-MQTT协议中的方法"><a href="#4-6-MQTT协议中的方法" class="headerlink" title="4.6 MQTT协议中的方法"></a>4.6 MQTT协议中的方法</h2><p> MQTT协议中定义了一些方法（也被称为动作），来于表示对确定资源所进行操作。这个资源可以代表预先存在的数据或动态生成数据，这取决于服务器的实现。通常来说，资源指服务器上的文件或输出。主要方法有：</p><p>（1）Connect。等待与服务器建立连接。</p><p>（2）Disconnect。等待MQTT客户端完成所做的工作，并与服务器断开TCP/IP会话。</p><p>（3）Subscribe。等待完成订阅。</p><p>（4）UnSubscribe。等待服务器取消客户端的一个或多个topics订阅。</p><p>（5）Publish。MQTT客户端发送消息请求，发送完成后返回应用程序线程。</p><h1 id="五、MQTT协议数据包结构"><a href="#五、MQTT协议数据包结构" class="headerlink" title="五、MQTT协议数据包结构"></a>五、MQTT协议数据包结构</h1><p> 在MQTT协议中，一个MQTT数据包由：固定头（Fixed header）、可变头（Variable header）、消息体（payload）三部分构成。MQTT数据包结构如下：</p><p>（1）固定头（Fixed header）。存在于所有MQTT数据包中，表示数据包类型及数据包的分组类标识。</p><p>（2）可变头（Variable header）。存在于部分MQTT数据包中，数据包类型决定了可变头是否存在及其具体内容。</p><p>（3）消息体（Payload）。存在于部分MQTT数据包中，表示客户端收到的具体内容。</p><h2 id="5-1-MQTT固定头"><a href="#5-1-MQTT固定头" class="headerlink" title="5.1 MQTT固定头"></a>5.1 MQTT固定头</h2><p>固定头存在于所有MQTT数据包中，其结构如下：</p><h3 id="5-1-1-MQTT数据包类型"><a href="#5-1-1-MQTT数据包类型" class="headerlink" title="5.1.1 MQTT数据包类型"></a>5.1.1 MQTT数据包类型</h3><p>位置：Byte 1中bits 7-4。</p><p>相于一个4位的无符号值，类型、取值及描述如下：</p><h3 id="5-1-2-标识位"><a href="#5-1-2-标识位" class="headerlink" title="5.1.2 标识位"></a>5.1.2 标识位</h3><p>位置：Byte 1中bits 3-0。</p><p> 在不使用标识位的消息类型中，标识位被作为保留位。如果收到无效的标志时，接收端必须关闭网络连接：</p><p>（1）DUP：发布消息的副本。用来在保证消息的可靠传输，如果设置为1，则在下面的变长中增加MessageId，并且需要回复确认，以保证消息传输完成，但不能用于检测消息重复发送。</p><p>（2）QoS：发布消息的服务质量，即：保证消息传递的次数</p><p><img src="/img/content/mqtt/2.png" srcset="/img/loading.gif" alt=""></p><p>（3）RETAIN： 发布保留标识，表示服务器要保留这次推送的信息，如果有新的订阅者出现，就把这消息推送给它，如果设有那么推送至当前订阅者后释放。</p><h3 id="5-1-3-剩余长度（Remaining-Length）"><a href="#5-1-3-剩余长度（Remaining-Length）" class="headerlink" title="5.1.3 剩余长度（Remaining Length）"></a>5.1.3 剩余长度（Remaining Length）</h3><p>地址：Byte 2。</p><p> 固定头的第二字节用来保存变长头部和消息体的总大小的，但不是直接保存的。这一字节是可以扩展，其保存机制，前7位用于保存长度，后一部用做标识。当最后一位为1时，表示长度不足，需要使用二个字节继续保存。例如：计算出后面的大小为0</p><h2 id="5-2-MQTT可变头"><a href="#5-2-MQTT可变头" class="headerlink" title="5.2 MQTT可变头"></a>5.2 MQTT可变头</h2><p> MQTT数据包中包含一个可变头，它驻位于固定的头和负载之间。可变头的内容因数据包类型而不同，较常的应用是作为包的标识：</p><p> 很多类型数据包中都包括一个2字节的数据包标识字段，这些类型的包有：PUBLISH (QoS &gt; 0)、PUBACK、PUBREC、PUBREL、PUBCOMP、SUBSCRIBE、SUBACK、UNSUBSCRIBE、UNSUBACK。</p><h2 id="5-3-Payload消息体"><a href="#5-3-Payload消息体" class="headerlink" title="5.3 Payload消息体"></a>5.3 Payload消息体</h2><p> Payload消息体位MQTT数据包的第三部分，包含CONNECT、SUBSCRIBE、SUBACK、UNSUBSCRIBE四种类型的消息：</p><p>（1）CONNECT，消息体内容主要是：客户端的ClientID、订阅的Topic、Message以及用户名和密码。</p><p>（2）SUBSCRIBE，消息体内容是一系列的要订阅的主题以及QoS。</p><p>（3）SUBACK，消息体内容是服务器对于SUBSCRIBE所申请的主题及QoS进行确认和回复。</p><p>（4）UNSUBSCRIBE，消息体内容是要订阅的主题。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mqtt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Email Slack WeChat预警配置</title>
    <link href="/2020/02/13/Email-Slack-WeChat%E9%A2%84%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/02/13/Email-Slack-WeChat%E9%A2%84%E8%AD%A6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>服务器定时器配置</title>
    <link href="/2020/02/13/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9A%E6%97%B6%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/02/13/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9A%E6%97%B6%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Windows Server部署项目</title>
    <link href="/2020/02/13/Windows-Server%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/"/>
    <url>/2020/02/13/Windows-Server%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux Server部署项目</title>
    <link href="/2020/02/13/Linux-Server%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/"/>
    <url>/2020/02/13/Linux-Server%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Django配置远程动态数据库(基于Microsoft SQL Server)</title>
    <link href="/2020/02/13/Django%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E4%BA%8EMicrosoft-SQL-Server/"/>
    <url>/2020/02/13/Django%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E4%BA%8EMicrosoft-SQL-Server/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Django进阶</title>
    <link href="/2020/02/13/Django%E8%BF%9B%E9%98%B6/"/>
    <url>/2020/02/13/Django%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Sphinx(斯芬克斯)文档概述</title>
    <link href="/2020/02/13/Sphinx-%E6%96%AF%E8%8A%AC%E5%85%8B%E6%96%AF-%E6%96%87%E6%A1%A3%E6%A6%82%E8%BF%B0/"/>
    <url>/2020/02/13/Sphinx-%E6%96%AF%E8%8A%AC%E5%85%8B%E6%96%AF-%E6%96%87%E6%A1%A3%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语法概述</title>
    <link href="/2020/02/13/markdown%E8%AF%AD%E6%B3%95%E6%A6%82%E8%BF%B0/"/>
    <url>/2020/02/13/markdown%E8%AF%AD%E6%B3%95%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用python操作excel表格</title>
    <link href="/2020/02/13/%E4%BD%BF%E7%94%A8python%E6%93%8D%E4%BD%9Cexcel%E8%A1%A8%E6%A0%BC/"/>
    <url>/2020/02/13/%E4%BD%BF%E7%94%A8python%E6%93%8D%E4%BD%9Cexcel%E8%A1%A8%E6%A0%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python进阶</title>
    <link href="/2020/02/13/python%E8%BF%9B%E9%98%B6/"/>
    <url>/2020/02/13/python%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="更新中…"><a href="#更新中…" class="headerlink" title="更新中…"></a>更新中…</h2>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
